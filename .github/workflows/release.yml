name: Release

on:
  push:
    tags:
      - "v*" # Trigger on tags like v1.0.0

env:
  CARGO_TERM_COLOR: always
  CARGO_INCREMENTAL: 0
  RUSTFLAGS: "-C target-cpu=native"

jobs:
  build:
    name: Build and Release
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-gnu
            artifact: linux-x86_64
          - os: macos-latest
            target: aarch64-apple-darwin
            artifact: apple-aarch64
          - os: windows-latest
            target: x86_64-pc-windows-msvc
            artifact: windows-x86_64

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true
          target: ${{ matrix.target }}

      - name: Cache cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            ${{ runner.os }}-cargo-

      - name: Build release binary
        shell: bash
        run: |
          cargo build --release --target ${{ matrix.target }}
          mkdir -p release
          if [ "${{ runner.os }}" = "Windows" ]; then
            cp target/${{ matrix.target }}/release/disk-usage-tui.exe release/disk-usage-tui-${{ matrix.artifact }}.exe
          else
            cp target/${{ matrix.target }}/release/disk-usage-tui release/disk-usage-tui-${{ matrix.artifact }}
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: disk-usage-tui-${{ matrix.artifact }}
          path: release/disk-usage-tui-*
          if-no-files-found: error

  create-release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Disk Usage TUI Analyzer ${{ github.ref_name }}

            ### Assets
            - `disk-usage-tui-linux-x86_64` - Linux x86_64
            - `disk-usage-tui-apple-aarch64` - macOS (Apple Silicon)
            - `disk-usage-tui-windows-x86_64.exe` - Windows x86_64
          draft: false
          prerelease: false
          files: |
            artifacts/disk-usage-tui-linux-x86_64
            artifacts/disk-usage-tui-apple-aarch64
            artifacts/disk-usage-tui-windows-x86_64.exe
